local Library = {}
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local function CreateGradient(parent, colorSequence, rotation)
    local gradient = Instance.new("UIGradient")
    gradient.Color = colorSequence
    gradient.Rotation = rotation or 0
    gradient.Parent = parent
    return gradient
end

local function CreateStroke(parent, thickness, color)
    local stroke = Instance.new("UIStroke")
    stroke.Thickness = thickness
    stroke.Color = color
    stroke.Parent = parent
    return stroke
end

function Library:CreateWindow(name)
    local MainUI = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    local SideBar = Instance.new("Frame")
    local ContentArea = Instance.new("Frame")
    
    MainUI.Name = "HorizonUI"
    MainUI.Parent = CoreGui
    MainUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = MainUI
    MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    MainFrame.Position = UDim2.new(0.5, -400, 0.5, -300)
    MainFrame.Size = UDim2.new(0, 800, 0, 600)
    MainFrame.ClipsDescendants = false
    
    local DropShadow = Instance.new("ImageLabel")
    DropShadow.Image = "rbxassetid://1316045217"
    DropShadow.ImageColor3 = Color3.new(0, 0, 0)
    DropShadow.ImageTransparency = 0.4
    DropShadow.ScaleType = Enum.ScaleType.Slice
    DropShadow.SliceCenter = Rect.new(10, 10, 118, 118)
    DropShadow.Size = UDim2.new(1, 44, 1, 44)
    DropShadow.Position = UDim2.new(-0.22, 0, -0.22, 0)
    DropShadow.BackgroundTransparency = 1
    DropShadow.Parent = MainFrame
    
    local MainCorner = Instance.new("UICorner")
    MainCorner.CornerRadius = UDim.new(0, 12)
    MainCorner.Parent = MainFrame
    
    CreateGradient(MainFrame, ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 45)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 30))
    }), 45)
    
    SideBar.Name = "SideBar"
    SideBar.Parent = MainFrame
    SideBar.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
    SideBar.Size = UDim2.new(0, 200, 1, 0)
    
    local SideBarCorner = Instance.new("UICorner")
    SideBarCorner.CornerRadius = UDim.new(0, 12)
    SideBarCorner.Parent = SideBar
    
    CreateGradient(SideBar, ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(20, 20, 35)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 25))
    }))
    
    ContentArea.Name = "ContentArea"
    ContentArea.Parent = MainFrame
    ContentArea.BackgroundTransparency = 1
    ContentArea.Position = UDim2.new(0, 210, 0, 60)
    ContentArea.Size = UDim2.new(1, -220, 1, -70)
    ContentArea.ClipsDescendants = true
    
    local SearchContainer = Instance.new("Frame")
    SearchContainer.Name = "SearchContainer"
    SearchContainer.Parent = MainFrame
    SearchContainer.BackgroundTransparency = 1
    SearchContainer.Position = UDim2.new(0, 210, 0, 15)
    SearchContainer.Size = UDim2.new(0, 570, 0, 30)
    
    local SearchBar = Instance.new("TextBox")
    SearchBar.Parent = SearchContainer
    SearchBar.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
    SearchBar.BackgroundTransparency = 0.2
    SearchBar.Size = UDim2.new(1, -40, 1, 0)
    SearchBar.Position = UDim2.new(0, 35, 0, 0)
    SearchBar.Font = Enum.Font.GothamMedium
    SearchBar.PlaceholderText = "Buscar..."
    SearchBar.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
    SearchBar.TextColor3 = Color3.fromRGB(255, 255, 255)
    SearchBar.TextSize = 13
    SearchBar.TextXAlignment = Enum.TextXAlignment.Left
    
    local SearchBarCorner = Instance.new("UICorner")
    SearchBarCorner.CornerRadius = UDim.new(0, 8)
    SearchBarCorner.Parent = SearchBar
    
    CreateGradient(SearchBar, ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 50, 75)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 40, 60))
    }), 90)
    
    CreateStroke(SearchBar, 1, Color3.fromRGB(80, 80, 110))
    
    local SearchIcon = Instance.new("ImageLabel")
    SearchIcon.Image = "rbxassetid://6031094667"
    SearchIcon.Parent = SearchContainer
    SearchIcon.Size = UDim2.new(0, 20, 0, 20)
    SearchIcon.Position = UDim2.new(0, 10, 0, 5)
    SearchIcon.ImageColor3 = Color3.fromRGB(180, 180, 180)
    
    local TabLibrary = {}
    local currentTab = nil
    
    local dragInput, dragStart, startPos
    local DragHandle = Instance.new("Frame")
    DragHandle.Name = "DragHandle"
    DragHandle.BackgroundTransparency = 1
    DragHandle.Size = UDim2.new(1, 0, 0, 60)
    DragHandle.Parent = MainFrame
    
    DragHandle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragStart = input.Position
            startPos = MainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragInput = nil
                end
            end)
        end
    end)
    
    DragHandle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    function TabLibrary:CreateTab(name, icon)
        local tab = {elements = {}, content = nil}
        
        local TabButton = Instance.new("TextButton")
        TabButton.Name = name.."Tab"
        TabButton.Parent = SideBar
        TabButton.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
        TabButton.Size = UDim2.new(0.9, 0, 0, 45)
        TabButton.Font = Enum.Font.GothamSemibold
        TabButton.Text = "    "..name
        TabButton.TextColor3 = Color3.fromRGB(200, 200, 255)
        TabButton.TextSize = 14
        
        CreateGradient(TabButton, ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 60)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(30, 30, 45))
        }))
        
        CreateStroke(TabButton, 1.5, Color3.fromRGB(60, 60, 90))
        
        if icon then
            local Icon = Instance.new("ImageLabel")
            Icon.Image = icon
            Icon.Parent = TabButton
            Icon.Size = UDim2.new(0, 20, 0, 20)
            Icon.Position = UDim2.new(0, 10, 0.5, -10)
            Icon.ImageColor3 = Color3.fromRGB(200, 200, 255)
        end
        
        local TabContent = Instance.new("Frame")
        TabContent.Name = name.."Content"
        TabContent.Parent = ContentArea
        TabContent.BackgroundTransparency = 1
        TabContent.Size = UDim2.new(1, 0, 1, 0)
        TabContent.Visible = false
        
        local ElementLibrary = {}
        
        function ElementLibrary:CreateButton(text, callback)
            local Button = Instance.new("TextButton")
            Button.Name = text
            Button.Parent = TabContent
            Button.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            Button.Size = UDim2.new(1, 0, 0, 40)
            Button.Font = Enum.Font.GothamSemibold
            Button.Text = text
            Button.TextColor3 = Color3.fromRGB(255, 255, 255)
            Button.TextSize = 14
            
            local ButtonCorner = Instance.new("UICorner")
            ButtonCorner.CornerRadius = UDim.new(0, 8)
            ButtonCorner.Parent = Button
            
            CreateStroke(Button, 1.5, Color3.fromRGB(60, 60, 90))
            
            Button.MouseEnter:Connect(function()
                TweenService:Create(Button, TweenInfo.new(0.2), {
                    BackgroundColor3 = Color3.fromRGB(45, 45, 65)
                }):Play()
            end)
            
            Button.MouseLeave:Connect(function()
                TweenService:Create(Button, TweenInfo.new(0.2), {
                    BackgroundColor3 = Color3.fromRGB(35, 35, 50)
                }):Play()
            end)
            
            Button.MouseButton1Click:Connect(function()
                local Ripple = Instance.new("Frame")
                Ripple.Size = UDim2.new(0, 0, 0, 0)
                Ripple.Position = UDim2.new(0.5, 0, 0.5, 0)
                Ripple.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Ripple.BackgroundTransparency = 0.8
                Ripple.Parent = Button
                
                local RippleCorner = Instance.new("UICorner")
                RippleCorner.CornerRadius = UDim.new(1, 0)
                RippleCorner.Parent = Ripple
                
                TweenService:Create(Ripple, TweenInfo.new(0.5), {
                    Size = UDim2.new(2, 0, 2, 0),
                    Position = UDim2.new(-0.5, 0, -0.5, 0),
                    BackgroundTransparency = 1
                }):Play()
                
                game.Debris:AddItem(Ripple, 0.5)
                callback()
            end)
            
            table.insert(tab.elements, {instance = Button, text = text:lower()})
            return Button
        end
        
        function ElementLibrary:CreateToggle(text, default, callback)
            local ToggleFrame = Instance.new("Frame")
            ToggleFrame.Name = text
            ToggleFrame.Parent = TabContent
            ToggleFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            ToggleFrame.Size = UDim2.new(1, 0, 0, 40)
            
            local ToggleCorner = Instance.new("UICorner")
            ToggleCorner.CornerRadius = UDim.new(0, 8)
            ToggleCorner.Parent = ToggleFrame
            
            CreateStroke(ToggleFrame, 1.5, Color3.fromRGB(60, 60, 90))
            
            local ToggleButton = Instance.new("TextButton")
            ToggleButton.Text = text
            ToggleButton.Font = Enum.Font.GothamSemibold
            ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            ToggleButton.Size = UDim2.new(1, 0, 1, 0)
            ToggleButton.Parent = ToggleFrame
            
            local Indicator = Instance.new("Frame")
            Indicator.Size = UDim2.new(0, 30, 0, 20)
            Indicator.Position = UDim2.new(0.9, -35, 0.5, -10)
            Indicator.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
            Indicator.Parent = ToggleFrame
            
            local IndicatorFill = Instance.new("Frame")
            IndicatorFill.Size = UDim2.new(0, 16, 0, 16)
            IndicatorFill.Position = default and UDim2.new(0.1, 0, 0.5, -8) or UDim2.new(0.5, 0, 0.5, -8)
            IndicatorFill.BackgroundColor3 = default and Color3.fromRGB(0, 255, 128) or Color3.fromRGB(255, 80, 80)
            IndicatorFill.Parent = Indicator
            
            local IndicatorCorner = Instance.new("UICorner")
            IndicatorCorner.CornerRadius = UDim.new(1, 0)
            IndicatorCorner.Parent = Indicator
            
            local FillCorner = Instance.new("UICorner")
            FillCorner.CornerRadius = UDim.new(1, 0)
            FillCorner.Parent = IndicatorFill
            
            local state = default or false
            
            local function UpdateToggle()
                local newPosition = state and UDim2.new(0.1, 0, 0.5, -8) or UDim2.new(0.5, 0, 0.5, -8)
                local newColor = state and Color3.fromRGB(0, 255, 128) or Color3.fromRGB(255, 80, 80)
                
                TweenService:Create(IndicatorFill, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                    Position = newPosition,
                    BackgroundColor3 = newColor
                }):Play()
            end
            
            ToggleButton.MouseButton1Click:Connect(function()
                state = not state
                UpdateToggle()
                callback(state)
            end)
            
            table.insert(tab.elements, {instance = ToggleFrame, text = text:lower()})
            return ToggleFrame
        end
        
        function ElementLibrary:CreateSlider(text, min, max, default, callback)
            local SliderFrame = Instance.new("Frame")
            SliderFrame.Name = text
            SliderFrame.Parent = TabContent
            SliderFrame.Size = UDim2.new(1, 0, 0, 60)
            SliderFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            
            local SliderCorner = Instance.new("UICorner")
            SliderCorner.CornerRadius = UDim.new(0, 8)
            SliderCorner.Parent = SliderFrame
            
            CreateStroke(SliderFrame, 1.5, Color3.fromRGB(60, 60, 90))
            
            local SliderText = Instance.new("TextLabel")
            SliderText.Text = text
            SliderText.Font = Enum.Font.GothamSemibold
            SliderText.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderText.Size = UDim2.new(1, -20, 0, 20)
            SliderText.Position = UDim2.new(0, 10, 0, 5)
            SliderText.Parent = SliderFrame
            
            local SliderContainer = Instance.new("Frame")
            SliderContainer.Size = UDim2.new(1, -20, 0, 20)
            SliderContainer.Position = UDim2.new(0, 10, 0, 30)
            SliderContainer.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
            SliderContainer.Parent = SliderFrame
            
            local SliderFill = Instance.new("Frame")
            SliderFill.Size = UDim2.new((default - min)/(max - min), 1, 1, 0)
            SliderFill.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
            SliderFill.Parent = SliderContainer
            
            local SliderButton = Instance.new("TextButton")
            SliderButton.Size = UDim2.new(1, 0, 1, 0)
            SliderButton.BackgroundTransparency = 1
            SliderButton.Parent = SliderContainer
            
            local ContainerCorner = Instance.new("UICorner")
            ContainerCorner.CornerRadius = UDim.new(1, 0)
            ContainerCorner.Parent = SliderContainer
            
            local FillCorner = Instance.new("UICorner")
            FillCorner.CornerRadius = UDim.new(1, 0)
            FillCorner.Parent = SliderFill
            
            SliderButton.MouseButton1Down:Connect(function()
                local connection
                connection = RunService.Heartbeat:Connect(function()
                    if UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then
                        local pos = (UserInputService:GetMouseLocation().X - SliderContainer.AbsolutePosition.X) / SliderContainer.AbsoluteSize.X
                        pos = math.clamp(pos, 0, 1)
                        SliderFill.Size = UDim2.new(pos, 0, 1, 0)
                        local value = math.floor(min + (max - min) * pos)
                        callback(value)
                    else
                        connection:Disconnect()
                    end
                end)
            end)
            
            table.insert(tab.elements, {instance = SliderFrame, text = text:lower()})
            return SliderFrame
        end
        
        SearchBar:GetPropertyChangedSignal("Text"):Connect(function()
            local searchText = SearchBar.Text:lower()
            if currentTab then
                for _, element in pairs(currentTab.elements) do
                    local match = element.text:find(searchText) ~= nil
                    element.instance.Visible = match
                    element.instance.Active = match
                end
            end
        end)
        
        TabButton.MouseButton1Click:Connect(function()
            if currentTab then
                for _, element in pairs(currentTab.elements) do
                    element.instance.Active = false
                end
            end
            
            for _, child in pairs(ContentArea:GetChildren()) do
                if child:IsA("Frame") then
                    child.Visible = false
                end
            end
            
            TabContent.Visible = true
            currentTab = tab
            
            for _, element in pairs(currentTab.elements) do
                element.instance.Active = true
            end
            
            SearchBar.Text = SearchBar.Text
        end)
        
        return ElementLibrary
    end
    
    return TabLibrary
end

return Library
