local Library = {}
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local function CreateGradient(parent, colorSequence, rotation)
    local gradient = Instance.new("UIGradient")
    gradient.Color = colorSequence
    gradient.Rotation = rotation or 0
    gradient.Parent = parent
    return gradient
end

local function CreateStroke(parent, thickness, color)
    local stroke = Instance.new("UIStroke")
    stroke.Thickness = thickness
    stroke.Color = color
    stroke.Parent = parent
    return stroke
end

function Library:CreateWindow(name)
    local MainUI = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    local SideBar = Instance.new("Frame")
    local ContentArea = Instance.new("Frame")
    local BackgroundParticles = Instance.new("Frame")
    
    MainUI.Name = "LibraryUI"
    MainUI.Parent = CoreGui
    MainUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = MainUI
    MainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50) -- Color más claro
    MainFrame.Position = UDim2.new(0.5, -400, 0.5, -300)
    MainFrame.Size = UDim2.new(0, 800, 0, 600)
    MainFrame.ClipsDescendants = true

    -- Sistema de arrastre
    local dragInput, dragStart, startPos
    local dragToggle = false
    
    local function updateInput(input)
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(
            startPos.X.Scale, 
            startPos.X.Offset + delta.X, 
            startPos.Y.Scale, 
            startPos.Y.Offset + delta.Y
        )
    end
    
    MainFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragToggle = true
            dragStart = input.Position
            startPos = MainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragToggle = false
                end
            end)
        end
    end)
    
    MainFrame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragToggle then
            updateInput(input)
        end
    end)

    -- Cerrar con tecla K
    UserInputService.InputBegan:Connect(function(input)
        if input.KeyCode == Enum.KeyCode.K then
            TweenService:Create(MainFrame, TweenInfo.new(0.3), {
                Size = UDim2.new(0, 0, 0, 0),
                Position = UDim2.new(0.5, 0, 0.5, 0)
            }):Play()
            task.wait(0.3)
            MainUI:Destroy()
        end
    end)

    local MainCorner = Instance.new("UICorner")
    MainCorner.CornerRadius = UDim.new(0, 12)
    MainCorner.Parent = MainFrame
    
    CreateGradient(MainFrame, ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 60)), -- Más claro
        ColorSequenceKeypoint.new(1, Color3.fromRGB(30, 30, 45)) -- Más claro
    }), 45)
    
    local Shadow = Instance.new("ImageLabel")
    Shadow.Name = "Shadow"
    Shadow.Parent = MainFrame
    Shadow.BackgroundTransparency = 1
    Shadow.Position = UDim2.new(0, -15, 0, -15)
    Shadow.Size = UDim2.new(1, 30, 1, 30)
    Shadow.Image = "rbxassetid://5028857084"
    Shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    Shadow.ImageTransparency = 0.2
    Shadow.ScaleType = Enum.ScaleType.Slice
    Shadow.SliceCenter = Rect.new(24, 24, 276, 276)
    
    SideBar.Name = "SideBar"
    SideBar.Parent = MainFrame
    SideBar.BackgroundColor3 = Color3.fromRGB(25, 25, 35) -- Más claro
    SideBar.Size = UDim2.new(0, 200, 1, 0)
    
    local SideBarCorner = Instance.new("UICorner")
    SideBarCorner.CornerRadius = UDim.new(0, 12)
    SideBarCorner.Parent = SideBar
    
    CreateGradient(SideBar, ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 45)), -- Más claro
        ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 25, 35)) -- Más claro
    }))
    
    local BrandFrame = Instance.new("Frame")
    BrandFrame.Name = "BrandFrame"
    BrandFrame.Parent = SideBar
    BrandFrame.BackgroundTransparency = 1
    BrandFrame.Size = UDim2.new(1, 0, 0, 60)
    
    local LogoContainer = Instance.new("Frame")
    LogoContainer.Name = "LogoContainer"
    LogoContainer.Parent = BrandFrame
    LogoContainer.BackgroundTransparency = 1
    LogoContainer.Position = UDim2.new(0, 15, 0, 15)
    LogoContainer.Size = UDim2.new(0, 30, 0, 30)
    
    local logoPoints = {}
    for i = 1, 8 do
        local point = Instance.new("Frame")
        point.Size = UDim2.new(0, 4, 0, 4)
        point.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        point.Position = UDim2.new(0.5, -2, 0.5, -2)
        point.Parent = LogoContainer
        
        local pointCorner = Instance.new("UICorner")
        pointCorner.CornerRadius = UDim.new(1, 0)
        pointCorner.Parent = point
        
        table.insert(logoPoints, point)
    end
    
    spawn(function()
        local angle = 0
        while true do
            for i, point in ipairs(logoPoints) do
                local offset = (i - 1) * (math.pi / 4)
                local radius = 12
                local x = math.cos(angle + offset) * radius
                local y = math.sin(angle + offset) * radius
                point.Position = UDim2.new(0.5, x - 2, 0.5, y - 2)
            end
            angle = angle + 0.02
            RunService.RenderStepped:Wait()
        end
    end)
    
    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Parent = BrandFrame
    Title.BackgroundTransparency = 1
    Title.Position = UDim2.new(0, 55, 0, 15)
    Title.Size = UDim2.new(1, -70, 0, 30)
    Title.Font = Enum.Font.GothamBold
    Title.Text = name
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextSize = 22
    Title.TextXAlignment = Enum.TextXAlignment.Left
    
    local TitleGlow = Instance.new("ImageLabel")
    TitleGlow.Name = "TitleGlow"
    TitleGlow.Parent = Title
    TitleGlow.BackgroundTransparency = 1
    TitleGlow.Size = UDim2.new(1, 20, 1, 20)
    TitleGlow.Image = "rbxassetid://5028857084"
    TitleGlow.ImageColor3 = Color3.fromRGB(255, 255, 255)
    TitleGlow.ImageTransparency = 0.8
    
    local SideBarList = Instance.new("Frame")
    SideBarList.Name = "SideBarList"
    SideBarList.Parent = SideBar
    SideBarList.BackgroundTransparency = 1
    SideBarList.Position = UDim2.new(0, 0, 0, 70)
    SideBarList.Size = UDim2.new(1, 0, 1, -70)
    
    local SideBarLayout = Instance.new("UIListLayout")
    SideBarLayout.Parent = SideBarList
    SideBarLayout.Padding = UDim.new(0, 8)
    
    ContentArea.Name = "ContentArea"
    ContentArea.Parent = MainFrame
    ContentArea.BackgroundTransparency = 1
    ContentArea.Position = UDim2.new(0, 210, 0, 60)
    ContentArea.Size = UDim2.new(1, -220, 1, -70)
    ContentArea.ClipsDescendants = true
    
    local SearchContainer = Instance.new("Frame")
    SearchContainer.Name = "SearchContainer"
    SearchContainer.Parent = MainFrame
    SearchContainer.BackgroundTransparency = 1
    SearchContainer.Position = UDim2.new(0, 210, 0, 15)
    SearchContainer.Size = UDim2.new(0, 570, 0, 30)
    
    local SearchBar = Instance.new("TextBox")
    SearchBar.Parent = SearchContainer
    SearchBar.BackgroundColor3 = Color3.fromRGB(50, 50, 75) -- Más claro
    SearchBar.BackgroundTransparency = 0.2
    SearchBar.Size = UDim2.new(1, -40, 1, 0)
    SearchBar.Position = UDim2.new(0, 35, 0, 0)
    SearchBar.Font = Enum.Font.GothamMedium
    SearchBar.PlaceholderText = "Search..."
    SearchBar.PlaceholderColor3 = Color3.fromRGB(180, 180, 180)
    SearchBar.TextColor3 = Color3.fromRGB(255, 255, 255)
    SearchBar.TextSize = 13
    SearchBar.TextXAlignment = Enum.TextXAlignment.Left
    SearchBar.ClearTextOnFocus = false
    SearchBar.Text = ""
    
    local SearchBarCorner = Instance.new("UICorner")
    SearchBarCorner.CornerRadius = UDim.new(0, 8)
    SearchBarCorner.Parent = SearchBar
    
    CreateGradient(SearchBar, ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(60, 60, 90)), -- Más claro
        ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 75)) -- Más claro
    }), 90)
    
    CreateStroke(SearchBar, 1, Color3.fromRGB(90, 90, 120)) -- Borde más claro
    
    local SearchIcon = Instance.new("ImageLabel")
    SearchIcon.Name = "SearchIcon"
    SearchIcon.Parent = SearchContainer
    SearchIcon.BackgroundTransparency = 1
    SearchIcon.Position = UDim2.new(0, 10, 0, 5)
    SearchIcon.Size = UDim2.new(0, 20, 0, 20)
    SearchIcon.Image = "rbxassetid://6031094667"
    SearchIcon.ImageColor3 = Color3.fromRGB(200, 200, 200) -- Más claro
    
    SearchIcon.MouseEnter:Connect(function()
        TweenService:Create(SearchIcon, TweenInfo.new(0.2), {
            ImageColor3 = Color3.fromRGB(240, 240, 240)
        }):Play()
    end)
    
    SearchIcon.MouseLeave:Connect(function()
        TweenService:Create(SearchIcon, TweenInfo.new(0.2), {
            ImageColor3 = Color3.fromRGB(200, 200, 200)
        }):Play()
    end)
    
    local SearchPadding = Instance.new("UIPadding")
    SearchPadding.Parent = SearchBar
    SearchPadding.PaddingLeft = UDim.new(0, 30)
    
    BackgroundParticles.Name = "BackgroundParticles"
    BackgroundParticles.Parent = MainFrame
    BackgroundParticles.BackgroundTransparency = 1
    BackgroundParticles.Size = UDim2.new(1, 0, 1, 0)
    
    for i = 1, 50 do
        local particle = Instance.new("Frame")
        particle.Parent = BackgroundParticles
        particle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        particle.BackgroundTransparency = 0.9
        particle.Size = UDim2.new(0, math.random(2, 4), 0, math.random(2, 4))
        particle.Position = UDim2.new(math.random(), 0, math.random(), 0)
        
        local particleCorner = Instance.new("UICorner")
        particleCorner.CornerRadius = UDim.new(1, 0)
        particleCorner.Parent = particle
        
        spawn(function()
            while true do
                local tween = TweenService:Create(particle, TweenInfo.new(math.random(3,6)), {
                    Position = UDim2.new(math.random(), 0, math.random(), 0),
                    BackgroundTransparency = math.random(0.8, 0.95)
                })
                tween:Play()
                wait(math.random(3,6))
            end
        end)
    end
    
    local TabLibrary = {}
    local currentTab = nil
    
    function TabLibrary:CreateTab(name, icon)
        local tab = {
            elements = {},
            content = nil
        }
        
        local TabButton = Instance.new("TextButton")
        local TabContent = Instance.new("Frame")
        
        -- Botón redondeado
        local TabButtonCorner = Instance.new("UICorner")
        TabButtonCorner.CornerRadius = UDim.new(1, 0) -- Esquinas completamente redondeadas
        TabButtonCorner.Parent = TabButton
        
        TabButton.Name = name.."Tab"
        TabButton.Parent = SideBarList
        TabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 60) -- Más claro
        TabButton.Size = UDim2.new(0.8, 0, 0, 45) -- Tamaño ajustado
        TabButton.Position = UDim2.new(0.1, 0, 0, 0) -- Centrado
        TabButton.Font = Enum.Font.GothamSemibold
        TabButton.Text = name
        TabButton.TextColor3 = Color3.fromRGB(220, 220, 255) -- Texto más claro
        TabButton.TextSize = 14
        TabButton.AutoButtonColor = false
        
        CreateGradient(TabButton, ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 50, 75)), -- Gradiente más claro
            ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 40, 60))
        }))
        
        CreateStroke(TabButton, 1.5, Color3.fromRGB(80, 80, 110)) -- Borde más claro
        
        if icon then
            local Icon = Instance.new("ImageLabel")
            Icon.Parent = TabButton
            Icon.BackgroundTransparency = 1
            Icon.Position = UDim2.new(0, 10, 0.5, -10)
            Icon.Size = UDim2.new(0, 20, 0, 20)
            Icon.Image = icon
            Icon.ImageColor3 = Color3.fromRGB(220, 220, 255) -- Icono más claro
            TabButton.Text = "    "..name
        end
        
        TabContent.Name = name.."Content"
        TabContent.Parent = ContentArea
        TabContent.BackgroundTransparency = 1
        TabContent.Size = UDim2.new(1, 0, 1, 0)
        TabContent.Visible = false
        
        local TabLayout = Instance.new("UIListLayout")
        TabLayout.Parent = TabContent
        TabLayout.Padding = UDim.new(0, 10)
        
        local TabPadding = Instance.new("UIPadding")
        TabPadding.Parent = TabContent
        TabPadding.PaddingLeft = UDim.new(0, 10)
        TabPadding.PaddingRight = UDim.new(0, 10)
        TabPadding.PaddingTop = UDim.new(0, 10)
        
        TabButton.MouseButton1Click:Connect(function()
            if currentTab then
                for _, element in pairs(currentTab.elements) do
                    element.instance.Active = false
                end
            end
            
            for _, child in pairs(ContentArea:GetChildren()) do
                if child:IsA("Frame") then
                    child.Visible = false
                end
            end
            
            TabContent.Visible = true
            currentTab = tab
            
            for _, element in pairs(currentTab.elements) do
                element.instance.Active = true
            end
            
            SearchBar.Text = SearchBar.Text
        end)
        
        local ElementLibrary = {}
        
        function ElementLibrary:CreateButton(text, callback)
            local Button = Instance.new("TextButton")
            Button.Name = text.."Button"
            Button.Parent = TabContent
            Button.BackgroundColor3 = Color3.fromRGB(45, 45, 65) -- Más claro
            Button.Size = UDim2.new(1, 0, 0, 40)
            Button.Font = Enum.Font.GothamSemibold
            Button.Text = text
            Button.TextColor3 = Color3.fromRGB(255, 255, 255)
            Button.TextSize = 14
            Button.AutoButtonColor = false
            Button.Active = true
            
            local ButtonCorner = Instance.new("UICorner")
            ButtonCorner.CornerRadius = UDim.new(0, 8)
            ButtonCorner.Parent = Button
            
            CreateStroke(Button, 1.5, Color3.fromRGB(70, 70, 100)) -- Borde más claro
            
            Button.MouseEnter:Connect(function()
                TweenService:Create(Button, TweenInfo.new(0.2), {
                    BackgroundColor3 = Color3.fromRGB(55, 55, 80) -- Hover más claro
                }):Play()
            })
            
            Button.MouseLeave:Connect(function()
                TweenService:Create(Button, TweenInfo.new(0.2), {
                    BackgroundColor3 = Color3.fromRGB(45, 45, 65)
                }):Play()
            })
            
            Button.MouseButton1Click:Connect(function()
                local Ripple = Instance.new("Frame")
                Ripple.Parent = Button
                Ripple.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Ripple.BackgroundTransparency = 0.7
                Ripple.Size = UDim2.new(0, 0, 0, 0)
                Ripple.Position = UDim2.new(
                    0, UserInputService:GetMouseLocation().X - Button.AbsolutePosition.X,
                    0, UserInputService:GetMouseLocation().Y - Button.AbsolutePosition.Y
                )
                
                local RippleCorner = Instance.new("UICorner")
                RippleCorner.CornerRadius = UDim.new(1, 0)
                RippleCorner.Parent = Ripple
                
                TweenService:Create(Ripple, TweenInfo.new(0.5), {
                    Size = UDim2.new(0, 500, 0, 500),
                    Position = UDim2.new(-1, 0, -1, 0),
                    BackgroundTransparency = 1
                }):Play()
                
                game.Debris:AddItem(Ripple, 0.5)
                callback()
            end)
            
            table.insert(tab.elements, {
                instance = Button,
                text = text:lower()
            })
            
            return Button
        end
        
        function ElementLibrary:CreateToggle(text, default, callback)
            local ToggleFrame = Instance.new("Frame")
            ToggleFrame.Name = text.."Toggle"
            ToggleFrame.Parent = TabContent
            ToggleFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 65) -- Más claro
            ToggleFrame.Size = UDim2.new(1, 0, 0, 40)
            ToggleFrame.Active = true
            
            local ToggleCorner = Instance.new("UICorner")
            ToggleCorner.CornerRadius = UDim.new(0, 8)
            ToggleCorner.Parent = ToggleFrame
            
            CreateStroke(ToggleFrame, 1.5, Color3.fromRGB(70, 70, 100)) -- Borde más claro
            
            local ToggleButton = Instance.new("TextButton")
            ToggleButton.Text = text
            ToggleButton.Font = Enum.Font.GothamSemibold
            ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            ToggleButton.TextSize = 14
            ToggleButton.Size = UDim2.new(1, 0, 1, 0)
            ToggleButton.Parent = ToggleFrame
            ToggleButton.Active = true
            
            local state = default or false
            local Indicator = Instance.new("Frame")
            Indicator.Size = UDim2.new(0, 20, 0, 20)
            Indicator.Position = UDim2.new(0.9, -20, 0.5, -10)
            Indicator.BackgroundColor3 = state and Color3.fromRGB(0, 255, 128) or Color3.fromRGB(255, 64, 64)
            Indicator.Parent = ToggleFrame
            
            local IndicatorCorner = Instance.new("UICorner")
            IndicatorCorner.CornerRadius = UDim.new(1, 0)
            IndicatorCorner.Parent = Indicator
            
            ToggleButton.MouseButton1Click:Connect(function()
                state = not state
                TweenService:Create(Indicator, TweenInfo.new(0.2), {
                    BackgroundColor3 = state and Color3.fromRGB(0, 255, 128) or Color3.fromRGB(255, 64, 64)
                }):Play()
                callback(state)
            end)
            
            table.insert(tab.elements, {
                instance = ToggleFrame,
                text = text:lower()
            })
            
            return ToggleFrame
        end
        
        function ElementLibrary:CreateSlider(text, min, max, default, callback)
            local SliderFrame = Instance.new("Frame")
            SliderFrame.Name = text.."Slider"
            SliderFrame.Parent = TabContent
            SliderFrame.Size = UDim2.new(1, 0, 0, 60)
            SliderFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 65) -- Más claro
            SliderFrame.Active = true
            
            local SliderCorner = Instance.new("UICorner")
            SliderCorner.CornerRadius = UDim.new(0, 8)
            SliderCorner.Parent = SliderFrame
            
            CreateStroke(SliderFrame, 1.5, Color3.fromRGB(70, 70, 100)) -- Borde más claro
            
            local SliderText = Instance.new("TextLabel")
            SliderText.Text = text
            SliderText.Font = Enum.Font.GothamSemibold
            SliderText.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderText.Size = UDim2.new(1, -20, 0, 20)
            SliderText.Position = UDim2.new(0, 10, 0, 5)
            SliderText.Parent = SliderFrame
            
            local SliderBackground = Instance.new("Frame")
            SliderBackground.Size = UDim2.new(1, -20, 0, 5)
            SliderBackground.Position = UDim2.new(0, 10, 0, 35)
            SliderBackground.BackgroundColor3 = Color3.fromRGB(35, 35, 50) -- Más claro
            SliderBackground.Parent = SliderFrame
            
            local SliderFill = Instance.new("Frame")
            SliderFill.Size = UDim2.new((default - min)/(max - min), 0, 1, 0)
            SliderFill.BackgroundColor3 = Color3.fromRGB(0, 170, 255) -- Color más vibrante
            SliderFill.Parent = SliderBackground
            
            local SliderButton = Instance.new("TextButton")
            SliderButton.Size = UDim2.new(1, 0, 1, 0)
            SliderButton.BackgroundTransparency = 1
            SliderButton.Parent = SliderBackground
            SliderButton.Active = true
            
            SliderButton.MouseButton1Down:Connect(function()
                local connection
                connection = RunService.RenderStepped:Connect(function()
                    if UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then
                        local pos = (UserInputService:GetMouseLocation().X - SliderBackground.AbsolutePosition.X) / SliderBackground.AbsoluteSize.X
                        pos = math.clamp(pos, 0, 1)
                        SliderFill.Size = UDim2.new(pos, 0, 1, 0)
                        local value = math.floor(min + (max - min) * pos)
                        callback(value)
                    else
                        connection:Disconnect()
                    end
                end)
            end)
            
            table.insert(tab.elements, {
                instance = SliderFrame,
                text = text:lower()
            })
            
            return SliderFrame
        end
        
        SearchBar:GetPropertyChangedSignal("Text"):Connect(function()
            local searchText = SearchBar.Text:lower()
            if currentTab then
                for _, element in pairs(currentTab.elements) do
                    local match = element.text:find(searchText) ~= nil
                    element.instance.Visible = match
                    element.instance.Active = match
                    TweenService:Create(element.instance, TweenInfo.new(0.2), {
                        BackgroundTransparency = match and 0 or 0.5
                    }):Play()
                end
            end
        end)
        
        return ElementLibrary
    end
    
    return TabLibrary
end

return Library
