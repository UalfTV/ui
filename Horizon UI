local Library = {}
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

--[[═══════════════════════════════════════════════【 UTILITIES 】═════════════════════════════════════════════════]]
local function CreateGradient(parent, colorSequence, rotation)
    local gradient = Instance.new("UIGradient")
    gradient.Color = colorSequence
    gradient.Rotation = rotation or 0
    gradient.Parent = parent
    return gradient
end

local function CreateStroke(parent, thickness, color)
    local stroke = Instance.new("UIStroke")
    stroke.Thickness = thickness
    stroke.Color = color
    stroke.Parent = parent
    return stroke
end

--[[══════════════════════════════════════════════【 NOTIFICATIONS 】═══════════════════════════════════════════════]]
function Library:Notify(config)
    local notification = Instance.new("Frame")
    notification.Size = UDim2.new(0, 300, 0, 80)
    notification.Position = UDim2.new(1, -320, 1, -100)
    notification.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    notification.Parent = CoreGui
    notification.ZIndex = 100
    
    CreateGradient(notification, ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 60)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(30, 30, 45))
    }), 90)
    
    CreateStroke(notification, 2, Color3.fromRGB(60, 60, 90))
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = notification
    
    local title = Instance.new("TextLabel")
    title.Text = config.Title
    title.Font = Enum.Font.GothamBold
    title.TextSize = 16
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Size = UDim2.new(1, -40, 0, 30)
    title.Position = UDim2.new(0, 15, 0, 10)
    title.BackgroundTransparency = 1
    title.Parent = notification
    
    local closeBtn = Instance.new("TextButton")
    closeBtn.Text = "X"
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.TextSize = 18
    closeBtn.TextColor3 = Color3.fromRGB(200, 200, 200)
    closeBtn.Size = UDim2.new(0, 25, 0, 25)
    closeBtn.Position = UDim2.new(1, -30, 0, 10)
    closeBtn.BackgroundTransparency = 1
    closeBtn.Parent = notification
    
    closeBtn.MouseEnter:Connect(function()
        TweenService:Create(closeBtn, TweenInfo.new(0.2), {
            TextColor3 = Color3.fromRGB(255, 80, 80)
        }):Play()
    end)
    
    closeBtn.MouseLeave:Connect(function()
        TweenService:Create(closeBtn, TweenInfo.new(0.2), {
            TextColor3 = Color3.fromRGB(200, 200, 200)
        }):Play()
    end)
    
    closeBtn.MouseButton1Click:Connect(function()
        TweenService:Create(notification, TweenInfo.new(0.3), {
            Position = UDim2.new(1, 300, 1, -100)
        }):Play()
        task.wait(0.3)
        notification:Destroy()
    end)
    
    if config.Duration then
        task.delay(config.Duration, function()
            if notification then
                TweenService:Create(notification, TweenInfo.new(0.5), {
                    Position = UDim2.new(1, 300, 1, -100)
                }):Play()
                task.wait(0.5)
                notification:Destroy()
            end
        end)
    end
end

--[[════════════════════════════════════════════════【 WINDOW 】══════════════════════════════════════════════════]]
function Library:CreateWindow(name)
    local MainUI = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    
    -- Configuración básica
    MainUI.Name = "HorizonUI"
    MainUI.Parent = CoreGui
    MainUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Marco principal
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = MainUI
    MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    MainFrame.Position = UDim2.new(0.5, -400, 0.5, -300)
    MainFrame.Size = UDim2.new(0, 800, 0, 600)
    MainFrame.ClipsDescendants = true
    
    -- Efectos visuales
    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 12)
    mainCorner.Parent = MainFrame
    
    CreateGradient(MainFrame, ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 45)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 30))
    }), 45)
    
    local shadow = Instance.new("ImageLabel")
    shadow.Image = "rbxassetid://5028857084"
    shadow.ImageColor3 = Color3.new(0, 0, 0)
    shadow.ImageTransparency = 0.3
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(24, 24, 276, 276)
    shadow.Size = UDim2.new(1, 44, 1, 44)
    shadow.Position = UDim2.new(-0.22, 0, -0.22, 0)
    shadow.BackgroundTransparency = 1
    shadow.Parent = MainFrame
    
    -- Sistema de arrastre
    local dragInput, dragStart, startPos
    local dragToggle = false
    
    local function updateInput(input)
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(
            startPos.X.Scale, 
            startPos.X.Offset + delta.X, 
            startPos.Y.Scale, 
            startPos.Y.Offset + delta.Y
        )
    end
    
    MainFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragToggle = true
            dragStart = input.Position
            startPos = MainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragToggle = false
                end
            end)
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragToggle then
            updateInput(input)
        end
    end)

    -- Botón de cierre
    local closeButton = Instance.new("TextButton")
    closeButton.Text = "X"
    closeButton.Font = Enum.Font.GothamBold
    closeButton.TextSize = 18
    closeButton.TextColor3 = Color3.fromRGB(200, 200, 200)
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -35, 0, 5)
    closeButton.BackgroundTransparency = 1
    closeButton.Parent = MainFrame
    
    closeButton.MouseEnter:Connect(function()
        TweenService:Create(closeButton, TweenInfo.new(0.2), {
            TextColor3 = Color3.fromRGB(255, 80, 80)
        }):Play()
    end)
    
    closeButton.MouseLeave:Connect(function()
        TweenService:Create(closeButton, TweenInfo.new(0.2), {
            TextColor3 = Color3.fromRGB(200, 200, 200)
        }):Play()
    end)
    
    closeButton.MouseButton1Click:Connect(function()
        TweenService:Create(MainFrame, TweenInfo.new(0.3), {
            Size = UDim2.new(0, 0, 0, 0),
            Position = UDim2.new(0.5, 0, 0.5, 0)
        }):Play()
        task.wait(0.3)
        MainUI:Destroy()
    end)

    -- Cierre con tecla P
    UserInputService.InputBegan:Connect(function(input)
        if input.KeyCode == Enum.KeyCode.P then
            TweenService:Create(MainFrame, TweenInfo.new(0.3), {
                Size = UDim2.new(0, 0, 0, 0),
                Position = UDim2.new(0.5, 0, 0.5, 0)
            }):Play()
            task.wait(0.3)
            MainUI:Destroy()
        end
    end)

    -- Notificación de carga
    local loadStart = tick()
    Library:Notify({
        Title = "UI loaded in "..string.format("%.3f", tick() - loadStart).."s",
        Duration = 3
    })

    --[[══════════════════════════════════════════════【 TABS 】══════════════════════════════════════════════════]]
    local SideBar = Instance.new("Frame")
    SideBar.Name = "SideBar"
    SideBar.Parent = MainFrame
    SideBar.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
    SideBar.Size = UDim2.new(0, 200, 1, 0)
    
    CreateGradient(SideBar, ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(20, 20, 35)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 25))
    }))
    
    local TabContainer = Instance.new("Frame")
    TabContainer.Name = "TabContainer"
    TabContainer.Parent = SideBar
    TabContainer.BackgroundTransparency = 1
    TabContainer.Size = UDim2.new(1, 0, 1, -60)
    TabContainer.Position = UDim2.new(0, 0, 0, 60)
    
    local TabListLayout = Instance.new("UIListLayout")
    TabListLayout.Parent = TabContainer
    TabListLayout.Padding = UDim.new(0, 8)
    
    local ContentArea = Instance.new("Frame")
    ContentArea.Name = "ContentArea"
    ContentArea.Parent = MainFrame
    ContentArea.BackgroundTransparency = 1
    ContentArea.Position = UDim2.new(0, 210, 0, 60)
    ContentArea.Size = UDim2.new(1, -220, 1, -70)
    ContentArea.ClipsDescendants = true
    
    local TabLibrary = {}
    
    function TabLibrary:CreateTab(name, icon)
        local tab = { elements = {} }
        
        local TabButton = Instance.new("TextButton")
        TabButton.Name = name
        TabButton.Parent = TabContainer
        TabButton.Size = UDim2.new(0.9, 0, 0, 45)
        TabButton.Text = "    "..name
        TabButton.Font = Enum.Font.GothamSemibold
        TabButton.TextColor3 = Color3.fromRGB(200, 200, 255)
        TabButton.TextSize = 14
        TabButton.AutoButtonColor = false
        
        CreateGradient(TabButton, ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 60)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(30, 30, 45))
        }))
        
        CreateStroke(TabButton, 2, Color3.fromRGB(60, 60, 90))
        
        if icon then
            local Icon = Instance.new("ImageLabel")
            Icon.Image = icon
            Icon.Size = UDim2.new(0, 20, 0, 20)
            Icon.Position = UDim2.new(0, 10, 0.5, -10)
            Icon.ImageColor3 = Color3.fromRGB(200, 200, 255)
            Icon.Parent = TabButton
        end
        
        local TabContent = Instance.new("Frame")
        TabContent.Name = name.."Content"
        TabContent.Parent = ContentArea
        TabContent.BackgroundTransparency = 1
        TabContent.Size = UDim2.new(1, 0, 1, 0)
        TabContent.Visible = false
        
        TabButton.MouseButton1Click:Connect(function()
            for _, child in ipairs(ContentArea:GetChildren()) do
                if child:IsA("Frame") then
                    child.Visible = false
                end
            end
            TabContent.Visible = true
        end)
        
        local ElementLibrary = {}
        
        --[[════════════════════════════════════════【 UI ELEMENTS 】════════════════════════════════════════]]
        function ElementLibrary:CreateButton(text, callback)
            local Button = Instance.new("TextButton")
            Button.Name = text
            Button.Parent = TabContent
            Button.Size = UDim2.new(1, -20, 0, 40)
            Button.Position = UDim2.new(0, 10, 0, 0)
            Button.Text = text
            Button.Font = Enum.Font.GothamSemibold
            Button.TextColor3 = Color3.fromRGB(255, 255, 255)
            Button.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            Button.AutoButtonColor = false
            
            CreateGradient(Button, ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 45, 65)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(35, 35, 50))
            }))
            
            CreateStroke(Button, 2, Color3.fromRGB(60, 60, 90))
            
            Button.MouseEnter:Connect(function()
                TweenService:Create(Button, TweenInfo.new(0.2), {
                    BackgroundColor3 = Color3.fromRGB(50, 50, 70)
                }):Play()
            end)
            
            Button.MouseLeave:Connect(function()
                TweenService:Create(Button, TweenInfo.new(0.2), {
                    BackgroundColor3 = Color3.fromRGB(35, 35, 50)
                }):Play()
            end)
            
            Button.MouseButton1Click:Connect(function()
                pcall(callback)
            end)
            
            return Button
        end
        
        function ElementLibrary:CreateToggle(text, default, callback)
            local Toggle = Instance.new("TextButton")
            Toggle.Name = text
            Toggle.Parent = TabContent
            Toggle.Size = UDim2.new(1, -20, 0, 40)
            Toggle.Position = UDim2.new(0, 10, 0, 0)
            Toggle.Text = "    "..text
            Toggle.Font = Enum.Font.GothamSemibold
            Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
            Toggle.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            Toggle.AutoButtonColor = false
            
            local state = default or false
            local Indicator = Instance.new("Frame")
            Indicator.Size = UDim2.new(0, 20, 0, 20)
            Indicator.Position = UDim2.new(1, -30, 0.5, -10)
            Indicator.BackgroundColor3 = state and Color3.fromRGB(0, 255, 128) or Color3.fromRGB(255, 80, 80)
            Indicator.Parent = Toggle
            
            CreateStroke(Indicator, 2, Color3.fromRGB(60, 60, 90))
            
            Toggle.MouseButton1Click:Connect(function()
                state = not state
                TweenService:Create(Indicator, TweenInfo.new(0.2), {
                    BackgroundColor3 = state and Color3.fromRGB(0, 255, 128) or Color3.fromRGB(255, 80, 80)
                }):Play()
                pcall(callback, state)
            end)
            
            return Toggle
        end
        
        function ElementLibrary:CreateSlider(text, min, max, default, callback)
            local Slider = Instance.new("Frame")
            Slider.Name = text
            Slider.Parent = TabContent
            Slider.Size = UDim2.new(1, -20, 0, 60)
            Slider.Position = UDim2.new(0, 10, 0, 0)
            Slider.BackgroundTransparency = 1
            
            local SliderText = Instance.new("TextLabel")
            SliderText.Text = text
            SliderText.Font = Enum.Font.GothamMedium
            SliderText.TextColor3 = Color3.fromRGB(200, 200, 200)
            SliderText.Size = UDim2.new(1, 0, 0, 20)
            SliderText.Parent = Slider
            
            local Track = Instance.new("Frame")
            Track.Size = UDim2.new(1, 0, 0, 5)
            Track.Position = UDim2.new(0, 0, 0, 35)
            Track.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
            Track.Parent = Slider
            
            local Fill = Instance.new("Frame")
            Fill.Size = UDim2.new((default - min)/(max - min), 0, 1, 0)
            Fill.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
            Fill.Parent = Track
            
            local Dragger = Instance.new("TextButton")
            Dragger.Size = UDim2.new(1, 0, 1, 0)
            Dragger.BackgroundTransparency = 1
            Dragger.Parent = Track
            
            Dragger.MouseButton1Down:Connect(function()
                local connection
                connection = RunService.RenderStepped:Connect(function()
                    if UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then
                        local pos = (UserInputService:GetMouseLocation().X - Track.AbsolutePosition.X) / Track.AbsoluteSize.X
                        pos = math.clamp(pos, 0, 1)
                        Fill.Size = UDim2.new(pos, 0, 1, 0)
                        local value = math.floor(min + (max - min) * pos)
                        pcall(callback, value)
                    else
                        connection:Disconnect()
                    end
                end)
            end)
            
            return Slider
        end

        return ElementLibrary
    end

    return TabLibrary
end

return Library
